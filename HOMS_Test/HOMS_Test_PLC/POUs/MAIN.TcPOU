<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4020.14">
  <POU Name="MAIN" Id="{d73f6033-1c1a-47a8-be0f-3a700ab10cd1}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Main
VAR
	
	//x_up, x_dwn, y_up, y_dwn, pitch: AXIS_REF;
	x_couple, y_couple: MC_GEARIN;
	x_couple_start: BOOL := TRUE;
	y_couple_start: BOOL := TRUE;

//	{attribute 'TcLinkTo' := '.bLimFwd:=TIIB[y_up]^STM Status^Status^Digital input 1; .bLimBwd:=TIIB[y_up]^STM Status^Status^Digital input 2; .bSTO:=TIIB[di]^Channel 1^Input'}	
	{attribute 'TcLinkTo':='.bLimFwd:=TIIB[y_up]^STM Status^Status^Digital input 1'}		
    M1: DUT_MotionStage:=(nEnableMode:=0);
//	{attribute 'TcLinkTo' := '.bLimFwd:=TIIB[y_dwn]^STM Status^Status^Digital input 1; .bLimBwd:=TIIB[y_dwn]^STM Status^Status^Digital input 2'}
	M2: DUT_MotionStage:=(nEnableMode:=0);		
//	{attribute 'TcLinkTo' := '.bLimFwd:=TIIB[x_up]^STM Status^Status^Digital input 1; .bLimBwd:=TIIB[x_up]^STM Status^Status^Digital input 2'}	
	M3: DUT_MotionStage;
//	{attribute 'TcLinkTo' := '.bLimFwd:=TIIB[x_dwn]^STM Status^Status^Digital input 1; .bLimBwd:=TIIB[x_dwn]^STM Status^Status^Digital input 2'}
	M4: DUT_MotionStage;
//	{attribute 'TcLinkTo' := '.bLimFwd:=TIIB[pitch]^STM Status^Status^Digital input 1; .bLimBwd:=TIIB[pitch]^STM Status^Status^Digital input 2'}	
	M5: DUT_MotionStage;
	
	fbMotionStage_x_up, fbMotionStage_x_dwn, fbMotionStage_y_up, fbMotionStage_y_dwn, fbMotionStage_pitch : FB_MotionStage;
	
	enable: BOOL := TRUE;
	sto AT %I*: BOOL;
	x_position, y_position: LREAL;
	x_velocity: LREAL := 0.2;
	y_velocity: LREAL :=0.05;
	
	dx, dy: LREAL;		
	{attribute 'TcLinkTo' := '.Count:=TIIB[1-x_up_2-x_dwn]^FB Inputs Channel 1^Position'}	
	x_up_enc  AT %I*: ST_RenishawAbsEnc;
	{attribute 'TcLinkTo' := '.Count:=TIIB[1-x_up_2-x_dwn]^FB Inputs Channel 2^Position'}
	x_dwn_enc  AT %I*: ST_RenishawAbsEnc;
	
	{attribute 'TcLinkTo' := '.Count:=TIIB[1-y_up_2-y_dwn]^FB Inputs Channel 1^Position'}	
	y_up_enc  AT %I*: ST_RenishawAbsEnc;
	{attribute 'TcLinkTo' := '.Count:=TIIB[1-y_up_2-y_dwn]^FB Inputs Channel 2^Position'}
	y_dwn_enc  AT %I*: ST_RenishawAbsEnc:=(Ref:=0);

	x_limit_gantry, y_limit_gantry: FB_GantryDiffVirtualLimitSwitch;

	x_start, y_start: BOOL;

	// Decouple Axes when gantry too large
	GantryDiff : LINT;
	decouple : MC_GEAROUT;
	stop_axis : MC_HALT;
	bExecuteDecouple : BOOL;
	bStopAxis : BOOL;
	bGantryFixMode : BOOL;
	
	// Fwd/Bwd Enables to monitor:
	bM1Fwd : BOOL;
	bM1Bwd : BOOL;
	bM2Fwd : BOOL;
	bM2Bwd : BOOL;
	
	// Encoder fudge factor to simulate gantry difference
	fEncFudgeFactor : REAL := 1.0;
	
	fbGantryFixRTRIG: R_TRIG;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Fwd/Bwd Enables to monitor:
bM1Fwd := M1.bLimAllFwd;
bM1Bwd := M1.bLimAllBwd;
bM2Fwd := M2.bLimAllFwd;
bM2Bwd := M2.bLimAllBwd;

// Startup Parameters while Testing/Debugging:
sto := TRUE;
M1.bLimFwd := TRUE;
M1.bLimBwd := TRUE;
M1.bGantryAxis := TRUE;
M1.fGantryTol := 100;
M1.nCommand := 3;
M2.bLimFwd := TRUE;
M2.bLimBwd := TRUE;
M2.bGantryAxis := TRUE;
M2.fGantryTol := 200;

// Pretend Encoder counts
y_up_enc.Count := LREAL_TO_ULINT(M1.stAxisStatus.fActPosition * EXPT(10, 6));
y_dwn_enc.Count := LREAL_TO_ULINT(M2.stAxisStatus.fActPosition * fEncFudgeFactor * EXPT(10, 6));

M1.bSTO := sto;
M2.bSTO := sto;
M3.bSTO := sto;
M4.bSTO := sto;

y_limit_gantry(PEnc:=y_up_enc, SEnc:=y_dwn_enc, GantDiffTol:=LREAL_TO_LINT(M1.fGantryTol),
				PLimFwd=>M1.bLimGntFwd, PLimBwd=>M1.bLimGntBwd,
				SLimFwd=>M2.bLimGntFwd, SLimBwd=>M2.bLimGntBwd
);

x_limit_gantry(PEnc:=x_up_enc, SEnc:=x_dwn_enc, GantDiffTol:=LREAL_TO_LINT(M3.fGantryTol),
				PLimFwd=>M3.bLimGntFwd, PLimBwd=>M3.bLimGntBwd,
				SLimFwd=>M4.bLimGntFwd, SLimBwd=>M4.bLimGntBwd
);

fbMotionStage_y_up  (stMotionStage:=M1);
fbMotionStage_y_dwn (stMotionStage:=M2);
fbMotionStage_x_up  (stMotionStage:=M3);
fbMotionStage_x_dwn (stMotionStage:=M4);
fbMotionStage_pitch (stMotionStage:=M5);
	

	dx := M3.Axis.NcToPlc.ActPos - M4.Axis.NcToPlc.ActPos;
	dy := M1.Axis.NcToPlc.ActPos - M2.Axis.NcToPlc.ActPos;
	
x_couple ( Master:=M3.Axis, Slave:=M4.Axis, Execute:=(M3.bEnabled AND M4.bEnabled AND x_couple_start));
y_couple ( Master:=M1.Axis, Slave:=M2.Axis, Execute:=(M1.bEnabled AND M2.bEnabled AND y_couple_start));	

GantryDiff := ( ULINT_TO_LINT(y_up_enc.Count) - ULINT_TO_LINT(y_up_enc.Ref) ) - ( ULINT_TO_LINT(y_dwn_enc.Count) - ULINT_TO_LINT(y_dwn_enc.Ref) );

IF ABS(GantryDiff) > M1.fGantryTol AND NOT bGantryFixMode THEN
	y_couple_start := FALSE;
	M1.bExecute := FALSE;
	M2.bExecute := FALSE;
//	IF NOT (M1.bBusy OR M2.bBusy) THEN // BUG: M2.bBusy never resets to FALSE - likely due to it being a slave axis
	IF NOT M1.bBusy THEN
		bExecuteDecouple := TRUE;
		bStopAxis := TRUE;
		decouple( Slave:=M2.Axis, Execute:=bExecuteDecouple );
		stop_axis( Axis:=M2.Axis, Execute:=bStopAxis );
		stop_axis( Axis:=M1.Axis, Execute:=bStopAxis );
	END_IF
END_IF

fbGantryFixRTRIG(CLK:=bGantryFixMode);
IF fbGantryFixRTRIG.Q THEN
	M1.bReset := TRUE;
	M2.bReset := TRUE;
	bStopAxis := FALSE;
	bExecuteDecouple := FALSE;
END_IF]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="182" Count="3" />
      <LineId Id="252" Count="0" />
      <LineId Id="257" Count="0" />
      <LineId Id="254" Count="0" />
      <LineId Id="258" Count="0" />
      <LineId Id="255" Count="1" />
      <LineId Id="259" Count="5" />
      <LineId Id="180" Count="0" />
      <LineId Id="266" Count="0" />
      <LineId Id="181" Count="0" />
      <LineId Id="126" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="265" Count="0" />
      <LineId Id="49" Count="25" />
      <LineId Id="78" Count="1" />
      <LineId Id="235" Count="0" />
      <LineId Id="237" Count="0" />
      <LineId Id="250" Count="0" />
      <LineId Id="267" Count="1" />
      <LineId Id="273" Count="0" />
      <LineId Id="272" Count="0" />
      <LineId Id="351" Count="0" />
      <LineId Id="332" Count="0" />
      <LineId Id="329" Count="1" />
      <LineId Id="357" Count="0" />
      <LineId Id="274" Count="0" />
      <LineId Id="239" Count="0" />
      <LineId Id="352" Count="0" />
      <LineId Id="426" Count="0" />
      <LineId Id="353" Count="0" />
      <LineId Id="358" Count="1" />
      <LineId Id="420" Count="0" />
      <LineId Id="427" Count="0" />
      <LineId Id="355" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>